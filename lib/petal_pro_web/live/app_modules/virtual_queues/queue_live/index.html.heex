<div class="space-y-6">
  <!-- Header Section -->
  <div class="flex items-center justify-between">
    <div>
      <h1 class="text-2xl font-semibold text-gray-900 dark:text-white">
        Virtual Queues
      </h1>
      <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">
        Manage your organization's virtual queues and ticket systems
      </p>
    </div>

    <div class="flex items-center space-x-3">
      <!-- Quick Stats -->
      <div class="hidden md:flex items-center space-x-4 text-sm text-gray-500">
        <span>{length(@queues)} total queues</span>
        <span>
          {@queues |> Enum.count(&(&1.status == :active))} active
        </span>
      </div>
      
<!-- New Queue Button -->
      <.link
        patch={~p"/app/virtual-queues/new"}
        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
      >
        <.icon name="hero-plus" class="w-4 h-4 mr-2" /> New Queue
      </.link>
    </div>
  </div>
  
<!-- Filters Section -->
  <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-4">
    <.form for={%{}} as={:filters} phx-change="filter" class="flex flex-wrap items-end gap-4">
      <div class="flex-1 min-w-48">
        <.input
          type="text"
          name="filters[name]"
          placeholder="Search by name..."
          label="Queue Name"
          class="block w-full"
        />
      </div>

      <div class="flex-1 min-w-36">
        <.input
          type="select"
          name="filters[status]"
          label="Status"
          options={[
            {"All Statuses", ""},
            {"Active", "active"},
            {"Paused", "paused"},
            {"Inactive", "inactive"}
          ]}
          class="block w-full"
        />
      </div>

      <div class="flex-1 min-w-36">
        <.input
          type="select"
          name="filters[operational]"
          label="Operational"
          options={[
            {"All", ""},
            {"Operational", "true"},
            {"Non-operational", "false"}
          ]}
          class="block w-full"
        />
      </div>
    </.form>
  </div>
  
<!-- Queues Grid/List -->
  <div class="grid grid-cols-1 gap-6 lg:grid-cols-2 xl:grid-cols-3">
    <%= for queue <- @queues do %>
      <% stats = queue_stats_summary(queue) %>
      <% {status_text, status_color} = queue_status_badge(queue.status) %>

      <div class="bg-white dark:bg-gray-800 overflow-hidden shadow rounded-lg hover:shadow-md transition-shadow duration-200">
        <!-- Queue Header -->
        <div class="p-5">
          <div class="flex items-center justify-between">
            <div class="flex items-center">
              <div class="flex-shrink-0">
                <div class={[
                  "w-10 h-10 rounded-lg flex items-center justify-center",
                  if(stats.operational,
                    do: "bg-green-100 text-green-600",
                    else: "bg-gray-100 text-gray-400"
                  )
                ]}>
                  <.icon name="heroicons.queue_list" class="w-6 h-6" />
                </div>
              </div>
              <div class="ml-4">
                <h3 class="text-lg font-medium text-gray-900 dark:text-white">
                  {queue.name}
                </h3>
                <p class="text-sm text-gray-500 dark:text-gray-400">
                  {queue.description || "No description"}
                </p>
              </div>
            </div>
            
<!-- Status Badge -->
            <.badge color={status_color}>
              {status_text}
            </.badge>
          </div>
        </div>
        
<!-- Queue Stats -->
        <div class="border-t border-gray-200 dark:border-gray-700 px-5 py-3">
          <div class="grid grid-cols-3 gap-4 text-center">
            <div>
              <div class="text-2xl font-semibold text-gray-900 dark:text-white">
                {stats.waiting}
              </div>
              <div class="text-xs text-gray-500 dark:text-gray-400">Waiting</div>
            </div>
            <div>
              <div class="text-2xl font-semibold text-gray-900 dark:text-white">
                {queue.current_ticket_number}
              </div>
              <div class="text-xs text-gray-500 dark:text-gray-400">Current #</div>
            </div>
            <div>
              <div class="text-2xl font-semibold text-gray-900 dark:text-white">
                {stats.total}
              </div>
              <div class="text-xs text-gray-500 dark:text-gray-400">Total</div>
            </div>
          </div>
        </div>
        
<!-- Actions -->
        <div class="border-t border-gray-200 dark:border-gray-700 px-5 py-3">
          <div class="flex items-center justify-between">
            <div class="flex items-center space-x-2">
              <!-- Status Toggle Actions -->
              <%= if queue.status == :active do %>
                <.button
                  size="xs"
                  variant="outline"
                  color="warning"
                  phx-click="toggle_status"
                  phx-value-id={queue.id}
                  phx-value-action="pause"
                  data-confirm="Are you sure you want to pause this queue?"
                >
                  <.icon name="hero-pause" class="w-3 h-3 mr-1" /> Pause
                </.button>
              <% else %>
                <.button
                  size="xs"
                  variant="outline"
                  color="success"
                  phx-click="toggle_status"
                  phx-value-id={queue.id}
                  phx-value-action="activate"
                >
                  <.icon name="hero-play" class="w-3 h-3 mr-1" /> Activate
                </.button>
              <% end %>
            </div>

            <div class="flex items-center space-x-1">
              <!-- Manage Button -->
              <%= if can_manage_queue?(queue) do %>
                <.link
                  navigate={~p"/app/virtual-queues/#{queue.id}/manage"}
                  class="inline-flex items-center px-2 py-1 border border-transparent text-xs font-medium rounded text-primary-700 bg-primary-100 hover:bg-primary-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
                >
                  <.icon name="hero-cog-6-tooth" class="w-3 h-3 mr-1" /> Manage
                </.link>
              <% end %>
              
<!-- View Details Button -->
              <.link
                navigate={~p"/app/virtual-queues/#{queue.id}"}
                class="inline-flex items-center px-2 py-1 border border-gray-300 text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
              >
                <.icon name="hero-eye" class="w-3 h-3 mr-1" /> View
              </.link>
              
<!-- More Actions Menu -->
              <.dropdown>
                <:trigger>
                  <.button size="xs" variant="outline" color="gray">
                    <.icon name="hero-ellipsis-vertical" class="w-3 h-3" />
                  </.button>
                </:trigger>

                <.dropdown_menu_item
                  link_type="patch"
                  to={~p"/app/virtual-queues/#{queue.id}/edit"}
                >
                  <.icon name="hero-pencil" class="w-4 h-4 mr-2" /> Edit
                </.dropdown_menu_item>

                <.dropdown_menu_item
                  link_type="navigate"
                  to={~p"/app/virtual-queues/#{queue.id}/analytics"}
                >
                  <.icon name="hero-chart-bar" class="w-4 h-4 mr-2" /> Analytics
                </.dropdown_menu_item>

                <.dropdown_menu_item
                  link_type="navigate"
                  to={~p"/display/#{queue.id}"}
                  target="_blank"
                >
                  <.icon name="hero-tv" class="w-4 h-4 mr-2" /> Display Board
                </.dropdown_menu_item>

                <div class="border-t border-gray-200 dark:border-gray-600"></div>

                <.dropdown_menu_item
                  link_type="button"
                  phx-click="delete"
                  phx-value-id={queue.id}
                  data-confirm="Are you sure you want to delete this queue? This action cannot be undone."
                  class="text-red-700 hover:bg-red-50 hover:text-red-900"
                >
                  <.icon name="hero-trash" class="w-4 h-4 mr-2" /> Delete
                </.dropdown_menu_item>
              </.dropdown>
            </div>
          </div>
        </div>
        
<!-- Last Activity -->
        <div class="bg-gray-50 dark:bg-gray-700 px-5 py-2">
          <p class="text-xs text-gray-500 dark:text-gray-400">
            {format_last_activity(queue)}
          </p>
        </div>
      </div>
    <% end %>
  </div>
  
<!-- Empty State -->
  <%= if Enum.empty?(@queues) do %>
    <div class="text-center py-12">
      <.icon name="heroicons.queue_list" class="mx-auto h-12 w-12 text-gray-400" />
      <h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">No queues</h3>
      <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">
        Get started by creating your first virtual queue.
      </p>
      <div class="mt-6">
        <.link
          patch={~p"/app/virtual-queues/new"}
          class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
        >
          <.icon name="hero-plus" class="w-4 h-4 mr-2" /> New Queue
        </.link>
      </div>
    </div>
  <% end %>
</div>

<%= if @live_action in [:new, :edit] do %>
  <.modal page_title={@page_title} max_width="md">
    <.live_component
      module={PetalProWeb.VirtualQueues.QueueLive.FormComponent}
      id={@selected_queue.id || :new}
      action={@live_action}
      queue={@selected_queue}
      current_org={@current_org}
      patch={~p"/app/virtual-queues"}
    />
  </.modal>
<% end %>
